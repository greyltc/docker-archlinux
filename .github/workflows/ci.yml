name: ci

on:
  schedule:
    - cron: '36 4 * * 1'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY1: ghcr.io
  REGISTRY2: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME1: ${{ github.repository }}
  IMAGE_NAME2: greyltc/archlinux
  TEST_TAG: greyltc/archlinux:test


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "TODAY_IS=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Generate version string
        id: versionstring
        run: echo "THIS_VERSTRING=${{ env.TODAY_IS }}.0.${{ github.run_number }}" >> $GITHUB_ENV

#      - name: Set up QEMU
#        id: qemu
#        uses: docker/setup-qemu-action@v1
#        with:
#          image: tonistiigi/binfmt:latest
#          platforms: linux/amd64
#          platforms: all

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry1
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY1 }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install deps
        run: |
          sudo apt-get install -y fakeroot fakechroot zstd

      - name: Build root tarball
        run: |
          ci/do-update.sh x86_64

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY1 }}/${{ env.IMAGE_NAME1 }}

      - name: Build out useful image and export to docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test the image
        run: |
          docker run --rm ${{ env.TEST_TAG }} uname -a

      # Push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
